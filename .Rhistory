library(tidyverse)
library(cluster)
library(shiny)
library(rhandsontable)
library(rsconnect)
library(ggplot2)
slides2 <- readxl::read_excel("L:\\Pollen_Reference_Library\\Label_box.xlsx")[,2:4]
View(slides2)
View(slides2)
slides2 <- readxl::read_excel("L:\\Pollen_Reference_Library\\Label_box.xlsx")[,2:4] %>%
separate(Taxon, into = c("genus", "epithet"), sep = " ")
View(slides2)
raw <- list.files(pattern = "^Pollen_morpho_matrix")
scored_data <- read.csv(raw, na.strings=c("","NA"))
rm(raw)
scored_data <- scored_data %>%
filter(if_any(4:13, ~!is.na(.))) %>%
mutate(across(4:13, ~  as.factor(.))) %>%
select(-l_polar_lat, -l_equi_lat) # test purposes remove later.
gower.dist <- daisy(scored_data[ ,4:13], metric = c("gower"))
divisive.clust <- diana(as.matrix(gower.dist),
diss = TRUE, keep.diss = TRUE)
plot(divisive.clust, main = "Divisive")[1]
library(fpc)
cstats.table <- function(dist, tree, k) {
clust.assess <- c("cluster.number","n","within.cluster.ss","average.within","average.between",
"wb.ratio","dunn2","avg.silwidth")
clust.size <- c("cluster.size")
stats.names <- c()
row.clust <- c()
output.stats <- matrix(ncol = k, nrow = length(clust.assess))
cluster.sizes <- matrix(ncol = k, nrow = k)
for(i in c(1:k)){
row.clust[i] <- paste("Cluster-", i, " size")
}
for(i in c(2:k)){
stats.names[i] <- paste("Test", i-1)
for(j in seq_along(clust.assess)){
output.stats[j, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k =  i))[clust.assess])[j]
}
for(d in 1:k) {
cluster.sizes[d, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k = i))[clust.size])[d]
dim(cluster.sizes[d, i]) <- c(length(cluster.sizes[i]), 1)
cluster.sizes[d, i]
}
}
output.stats.df <- data.frame(output.stats)
cluster.sizes <- data.frame(cluster.sizes)
cluster.sizes[is.na(cluster.sizes)] <- 0
rows.all <- c(clust.assess, row.clust)
# rownames(output.stats.df) <- clust.assess
output <- rbind(output.stats.df, cluster.sizes)[ ,-1]
colnames(output) <- stats.names[2:k]
rownames(output) <- rows.all
is.num <- sapply(output, is.numeric)
output[is.num] <- lapply(output[is.num], round, 2)
output
}
stats.df.divisive <- cstats.table(gower.dist, divisive.clust, 7)
print(stats.df.divisive)
ggplot(data = data.frame(t(cstats.table(gower.dist, divisive.clust, 15))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Divisive clustering of Pollen Grain Morphotypes") +
labs(x = "Number of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
library(dendextend)
dendro <- as.dendrogram(divisive.clust)
position <- scored_data %>%
rowid_to_column() %>%
pull(rowid)
nomen <- scored_data %>%
unite(genus, col = 'binomial', epithet, sep = "_") %>%
pull(binomial)
full_lookup <- setNames(nomen, position)
#divisive.clust$order <- full_lookup[divisive.clust[["order"]]]
#divisive.clust$order <- unname(divisive.clust[["order"]])
dendro.col <- dendro %>%
set("branches_k_color", k = 7, value =  c("darkslategray", "darkslategray4", "darkslategray3", "gold3", "darkcyan", "cyan3", "gold3")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 7")
View(scored_data)
View(scored_data)
scored_data_1 <- scored_data %>%
unite(genus:epithet, "binomial")
?unite
scored_data_1 <- scored_data %>%
unite("binomial", genus:epithet)
View(scored_data_1)
labels(ggd1) <- paste(as.character(iris[,1])[order.dendrogram(ggd1)],
"(",labels(ggd1),")",
sep = "")
labels(ggd1) <- paste(as.character(scored_data_1[,1])[order.dendrogram(ggd1)],
"(",labels(ggd1),")",
sep = "")
labels(dendro) <- paste(as.character(scored_data_1[,1])[order.dendrogram(dendro)],
"(",labels(dendro),")",
sep = "")
dendro.col <- dendro %>%
set("branches_k_color", k = 7, value =  c("darkslategray", "darkslategray4", "darkslategray3", "gold3", "darkcyan", "cyan3", "gold3")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Num. observations", y = "Height", title = "Dendrogram, k = 7")
ggplot(ggd1, theme = theme_minimal()) +
labs(x = "Taxa", y = "Height", title = "Dendrogram, k = 7")
ggplot(ggd1) +
labs(x = "Taxa", y = "Height", title = "Dendrogram, k = 7")
ggplot(ggd1) +
labs(x = "Taxa", y = "Height", title = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7")
ggplot(ggd1) +
labs(x = "Taxa", y = "Height", title = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5))
ggplot(ggd1) +
labs(x = "Taxa", y = "Height", title = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5))
plot(dendro,
main = "Clustered Iris data set
(the labels give the true flower species)",
horiz =  TRUE,  nodePar = list(cex = .007))
plot(dendro,
main = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7",
horiz =  TRUE,  nodePar = list(cex = .007))
par(mar = c(3,3,3,7))
plot(dendro,
main = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7",
horiz =  TRUE,  nodePar = list(cex = .007))
slides2 <- readxl::read_excel("L:\\Pollen_Reference_Library\\Label_box.xlsx")[,2:4] %>%
separate(Taxon, into = c("genus", "epithet"), sep = " ")
View(slides2)
slides2 <- readxl::read_excel("L:\\Pollen_Reference_Library\\Label_box.xlsx")
View(slides2)
slides2 <- readxl::read_excel("L:\\Pollen_Reference_Library\\Label_box.xlsx")[,3:4] %>%
separate(Taxon, into = c("genus", "epithet"), sep = " ")
View(slides2)
pollen_df <- slides2 %>%
mutate(outline = "") %>%
mutate(polarity = "") %>%
mutate(dispersal_unit = "") %>%
mutate(aperturate = "") %>%
mutate(ornamentation = "") %>%
mutate(saccate = "") %>%
mutate(operculate = "") %>%
mutate(annulate = "") %>%
mutate(aperture_type = "") %>%
mutate(aperture_number = "") %>%
mutate(l_polar_lat = "") %>%
mutate(l_equi_lat = "")
outline_cat <- c("circular", "elliptic", "triangular", "lobate", "quadrangular", "polygonal")
polarity_cat <- c("heteropolar", "isopolar")
dispersal_unit_cat <- c("monad", "dyad", "tryad", "polyad")
aperturate_cat <- c("none", "heteroaperturate", "angulaperturate", "planaperturate")
ornamentation_cat <- c("areolate", "bacculate", "bireticulate", "clavate", "clypteate", "echinate", "fossulate", "gemmate", "heterobrochate", "homobrochate", "lophate", "psilate", "heterobrochate/psilate")
saccate_cat <- c("none", "monosaccate", "bisaccate", "trisaccate")
operculate_cat <- c("yes", "no")
annulate_cat <- c("yes", "no")
apertures_cat <- c("porate", "colpate", "colporate", "syncolpate")
aperture_num_cat <- c("mono", "di", "tri", "tetra", "penta", "stephano", "panto")
color_renderer <- "function(instance, td) {
Handsontable.renderers.TextRenderer.apply(this, arguments);
td.style.color = 'black';
}"
ui <- shinyUI(fluidPage(
fluidRow(
titlePanel(title = "Pollen Morphology Scoring Sheet"),
hr(),
column(4,
rHandsontableOutput("table"),
br(),
actionButton("saveBtn", "Save")
))
)) # creating the user interface, KISS.
server <- shinyServer(function(input, output, session){
output$table <- renderRHandsontable({
rhandsontable(pollen_df, width = 1400, height = 750) %>% #make the table big!!!
hot_col(1:15, renderer = color_renderer,) %>% # make the damn text black.
hot_col(1:3, readOnly = TRUE) %>%  # disable ediing these values
hot_table(highlightCol = TRUE, highlightRow = TRUE) %>% #let us see where we are on the spreadhsset.
hot_col(col = "outline", type = "dropdown", source = outline_cat, strict = F) %>% # dropdown options
hot_col(col = "polarity", type = "dropdown", source = polarity_cat, strict = F) %>%
hot_col(col = "dispersal_unit", type = "dropdown", source = dispersal_unit_cat, strict = F) %>%
hot_col(col = "aperturate", type = "dropdown", source = aperturate_cat, strict = F) %>%
hot_col(col = "ornamentation", type = "dropdown", source = ornamentation_cat, strict = F) %>%
hot_col(col = "saccate", type = "dropdown", source = saccate_cat, strict = F) %>%
hot_col(col = "operculate", type = "dropdown", source = operculate_cat, strict = F) %>%
hot_col(col = "annulate", type = "dropdown", source = annulate_cat, strict = F) %>%
hot_col(col = "aperture_type", type = "dropdown", source = apertures_cat, strict = F) %>%
hot_col(col = "aperture_number", type = "dropdown", source = aperture_num_cat, strict = F) %>%
hot_col(col = "l_polar_lat", type = "numeric",  strict = T) %>%
hot_col(col = "l_equi_lat", type = "numeric", strict = T)
})
observeEvent(input$saveBtn, write.csv(hot_to_r(input$table), file = paste0("Pollen_morpho_matrix.", Sys.Date(),".csv"), append=TRUE,  row.names = F))
}) # And here is our table, we have
shinyApp(ui = ui, server = server)
raw <- list.files(pattern = "^Pollen_morpho_matrix")
scored_data <- read.csv(raw[5], na.strings=c("","NA")) %>% janitor::clean_names()
library(tidyverse)
library(cluster)
library(shiny)
library(rhandsontable)
library(rsconnect)
library(ggplot2)
raw <- list.files(pattern = "^Pollen_morpho_matrix")
scored_data <- read.csv(raw[5], na.strings=c("","NA")) %>% janitor::clean_names()
rm(raw)
scored_data <- scored_data %>%
filter(if_any(4:13, ~!is.na(.))) %>%
mutate(across(4:13, ~  as.factor(.))) %>%
select(-l_polar_lat, -l_equi_lat) # test purposes remove later.
gower.dist <- daisy(scored_data[ ,4:13], metric = c("gower"))
divisive.clust <- diana(as.matrix(gower.dist),
diss = TRUE, keep.diss = TRUE)
plot(divisive.clust, main = "Divisive")[1]
library(fpc)
cstats.table <- function(dist, tree, k) {
clust.assess <- c("cluster.number","n","within.cluster.ss","average.within","average.between",
"wb.ratio","dunn2","avg.silwidth")
clust.size <- c("cluster.size")
stats.names <- c()
row.clust <- c()
output.stats <- matrix(ncol = k, nrow = length(clust.assess))
cluster.sizes <- matrix(ncol = k, nrow = k)
for(i in c(1:k)){
row.clust[i] <- paste("Cluster-", i, " size")
}
for(i in c(2:k)){
stats.names[i] <- paste("Test", i-1)
for(j in seq_along(clust.assess)){
output.stats[j, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k =  i))[clust.assess])[j]
}
for(d in 1:k) {
cluster.sizes[d, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k = i))[clust.size])[d]
dim(cluster.sizes[d, i]) <- c(length(cluster.sizes[i]), 1)
cluster.sizes[d, i]
}
}
output.stats.df <- data.frame(output.stats)
cluster.sizes <- data.frame(cluster.sizes)
cluster.sizes[is.na(cluster.sizes)] <- 0
rows.all <- c(clust.assess, row.clust)
# rownames(output.stats.df) <- clust.assess
output <- rbind(output.stats.df, cluster.sizes)[ ,-1]
colnames(output) <- stats.names[2:k]
rownames(output) <- rows.all
is.num <- sapply(output, is.numeric)
output[is.num] <- lapply(output[is.num], round, 2)
output
}
stats.df.divisive <- cstats.table(gower.dist, divisive.clust, 7)
print(stats.df.divisive)
ggplot(data = data.frame(t(cstats.table(gower.dist, divisive.clust, 15))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Divisive clustering of Pollen Grain Morphotypes") +
labs(x = "Number of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
library(dendextend)
dendro <- as.dendrogram(divisive.clust)
labels(dendro) <- paste(as.character(scored_data[,1])[order.dendrogram(dendro)], "(",labels(dendro),")", sep = "")
# position <- scored_data %>%
#   rowid_to_column() %>%
#   pull(rowid)
#
# nomen <- scored_data %>%
#   unite(genus, col = 'binomial', epithet, sep = "_") %>%
#   pull(binomial)
# full_lookup <- setNames(nomen, position)
#divisive.clust$order <- full_lookup[divisive.clust[["order"]]]
#divisive.clust$order <- unname(divisive.clust[["order"]])
dendro.col <- dendro %>%
set("branches_k_color", k = 7, value =  c("darkslategray", "darkslategray4", "darkslategray3", "gold3", "darkcyan", "cyan3", "gold3")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
# ggplot(ggd1) +
#   labs(x = "Taxa", y = "Height", title = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7") +
#   theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5))
scored_data_1 <- scored_data %>%
unite("binomial", i_genus:epithet)
View(scored_data)
scored_data_1 <- scored_data %>%
unite("binomial", binomial:epithet)
scored_data_1 <- scored_data %>%
unite("binomial", genus:epithet)
png('cluster_analysis.png',  width = 3000, height = 3000, units = "px",)
par(cex = 2.5, mar = c(3,3,3,7))
plot(dendro,
main = "Categorical Trait Based Dendrogram based on Gower Distances, k = 6",
horiz =  TRUE,  nodePar = list(cex = 1.5))
dev.off()
ggplot(ggd1) +
labs(x = "Taxa", y = "Height", title = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5))
png('cluster_analysis.png',  width = 3000, height = 3000, units = "px",)
par(cex = 2.5, mar = c(3,3,3,7))
plot(dendro,
main = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7",
horiz =  TRUE,  nodePar = list(cex = 1.5))
dev.off()
raw <- list.files(pattern = "^Pollen_morpho_matrix")
pollen_df <- read.csv(raw)
raw <- list.files(pattern = "^Pollen_morpho_matrix")
pollen_df <- read.csv(raw)
raw <- list.files(pattern = "^Pollen_morpho_matrix")
pollen_df <- read.csv(raw)
raw <- list.files(pattern = "^Pollen_morpho_matrix")
scored_data <- read.csv(raw[5], na.strings=c("","NA")) %>% janitor::clean_names()
rm(raw)
scored_data <- scored_data %>%
filter(if_any(4:13, ~!is.na(.))) %>%
mutate(across(4:13, ~  as.factor(.))) %>%
select(-l_polar_lat, -l_equi_lat) # test purposes remove later.
gower.dist <- daisy(scored_data[ ,4:13], metric = c("gower"))
divisive.clust <- diana(as.matrix(gower.dist),
diss = TRUE, keep.diss = TRUE)
plot(divisive.clust, main = "Divisive")[1]
library(fpc)
cstats.table <- function(dist, tree, k) {
clust.assess <- c("cluster.number","n","within.cluster.ss","average.within","average.between",
"wb.ratio","dunn2","avg.silwidth")
clust.size <- c("cluster.size")
stats.names <- c()
row.clust <- c()
output.stats <- matrix(ncol = k, nrow = length(clust.assess))
cluster.sizes <- matrix(ncol = k, nrow = k)
for(i in c(1:k)){
row.clust[i] <- paste("Cluster-", i, " size")
}
for(i in c(2:k)){
stats.names[i] <- paste("Test", i-1)
for(j in seq_along(clust.assess)){
output.stats[j, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k =  i))[clust.assess])[j]
}
for(d in 1:k) {
cluster.sizes[d, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k = i))[clust.size])[d]
dim(cluster.sizes[d, i]) <- c(length(cluster.sizes[i]), 1)
cluster.sizes[d, i]
}
}
output.stats.df <- data.frame(output.stats)
cluster.sizes <- data.frame(cluster.sizes)
cluster.sizes[is.na(cluster.sizes)] <- 0
rows.all <- c(clust.assess, row.clust)
# rownames(output.stats.df) <- clust.assess
output <- rbind(output.stats.df, cluster.sizes)[ ,-1]
colnames(output) <- stats.names[2:k]
rownames(output) <- rows.all
is.num <- sapply(output, is.numeric)
output[is.num] <- lapply(output[is.num], round, 2)
output
}
stats.df.divisive <- cstats.table(gower.dist, divisive.clust, 7)
print(stats.df.divisive)
ggplot(data = data.frame(t(cstats.table(gower.dist, divisive.clust, 15))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Divisive clustering of Pollen Grain Morphotypes") +
labs(x = "Number of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
library(dendextend)
dendro <- as.dendrogram(divisive.clust)
labels(dendro) <- paste(as.character(scored_data[,1])[order.dendrogram(dendro)], "(",labels(dendro),")", sep = "")
# position <- scored_data %>%
#   rowid_to_column() %>%
#   pull(rowid)
#
# nomen <- scored_data %>%
#   unite(genus, col = 'binomial', epithet, sep = "_") %>%
#   pull(binomial)
# full_lookup <- setNames(nomen, position)
#divisive.clust$order <- full_lookup[divisive.clust[["order"]]]
#divisive.clust$order <- unname(divisive.clust[["order"]])
dendro.col <- dendro %>%
set("branches_k_color", k = 7, value =  c("darkslategray", "darkslategray4", "darkslategray3", "gold3", "darkcyan", "cyan3", "gold3")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1) +
labs(x = "Taxa", y = "Height", title = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5))
scored_data_1 <- scored_data %>%
unite("binomial", genus:epithet)
png('cluster_analysis.png',  width = 3000, height = 3000, units = "px",)
par(cex = 2.5, mar = c(3,3,3,7))
plot(dendro,
main = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7",
horiz =  TRUE,  nodePar = list(cex = 1.5))
dev.off()
raw <- list.files(pattern = "^Pollen_morpho_matrix")
scored_data <- read.csv(raw[5], na.strings=c("","NA")) %>% janitor::clean_names()
rm(raw)
scored_data <- scored_data %>%
filter(if_any(4:13, ~!is.na(.))) %>%
mutate(across(4:13, ~  as.factor(.))) %>%
select(-l_polar_lat, -l_equi_lat) # test purposes remove later.
gower.dist <- daisy(scored_data[ ,4:13], metric = c("gower"))
divisive.clust <- diana(as.matrix(gower.dist),
diss = TRUE, keep.diss = TRUE)
plot(divisive.clust, main = "Divisive")[1]
library(fpc)
cstats.table <- function(dist, tree, k) {
clust.assess <- c("cluster.number","n","within.cluster.ss","average.within","average.between",
"wb.ratio","dunn2","avg.silwidth")
clust.size <- c("cluster.size")
stats.names <- c()
row.clust <- c()
output.stats <- matrix(ncol = k, nrow = length(clust.assess))
cluster.sizes <- matrix(ncol = k, nrow = k)
for(i in c(1:k)){
row.clust[i] <- paste("Cluster-", i, " size")
}
for(i in c(2:k)){
stats.names[i] <- paste("Test", i-1)
for(j in seq_along(clust.assess)){
output.stats[j, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k =  i))[clust.assess])[j]
}
for(d in 1:k) {
cluster.sizes[d, i] <- unlist(cluster.stats(d = dist, clustering = cutree(tree, k = i))[clust.size])[d]
dim(cluster.sizes[d, i]) <- c(length(cluster.sizes[i]), 1)
cluster.sizes[d, i]
}
}
output.stats.df <- data.frame(output.stats)
cluster.sizes <- data.frame(cluster.sizes)
cluster.sizes[is.na(cluster.sizes)] <- 0
rows.all <- c(clust.assess, row.clust)
# rownames(output.stats.df) <- clust.assess
output <- rbind(output.stats.df, cluster.sizes)[ ,-1]
colnames(output) <- stats.names[2:k]
rownames(output) <- rows.all
is.num <- sapply(output, is.numeric)
output[is.num] <- lapply(output[is.num], round, 2)
output
}
stats.df.divisive <- cstats.table(gower.dist, divisive.clust, 7)
print(stats.df.divisive)
ggplot(data = data.frame(t(cstats.table(gower.dist, divisive.clust, 15))),
aes(x=cluster.number, y=within.cluster.ss)) +
geom_point()+
geom_line()+
ggtitle("Divisive clustering of Pollen Grain Morphotypes") +
labs(x = "Number of clusters", y = "Within clusters sum of squares (SS)") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_bw()
library(dendextend)
dendro <- as.dendrogram(divisive.clust)
labels(dendro) <- paste(as.character(scored_data[,1])[order.dendrogram(dendro)], "(",labels(dendro),")", sep = "")
# position <- scored_data %>%
#   rowid_to_column() %>%
#   pull(rowid)
#
# nomen <- scored_data %>%
#   unite(genus, col = 'binomial', epithet, sep = "_") %>%
#   pull(binomial)
# full_lookup <- setNames(nomen, position)
#divisive.clust$order <- full_lookup[divisive.clust[["order"]]]
#divisive.clust$order <- unname(divisive.clust[["order"]])
dendro.col <- dendro %>%
set("branches_k_color", k = 7, value =  c("darkslategray", "darkslategray4", "darkslategray3", "gold3", "darkcyan", "cyan3", "gold3")) %>%
set("branches_lwd", 0.6) %>%
set("labels_colors",
value = c("darkslategray")) %>%
set("labels_cex", 0.5)
ggd1 <- as.ggdend(dendro.col)
ggplot(ggd1) +
labs(x = "Taxa", y = "Height", title = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 0.5))
scored_data_1 <- scored_data %>%
unite("binomial", genus:epithet)
png('cluster_analysis.png',  width = 3000, height = 3000, units = "px",)
par(cex = 2.5, mar = c(3,3,3,7))
plot(dendro,
main = "Categorical Trait Based Dendrogram based on Gower Distances, k = 7",
horiz =  TRUE,  nodePar = list(cex = 1.5))
dev.off()
shhh <- suppressPackageStartupMessages()
shhh <- suppressPackageStartupMessages
shhh(library(here))
set_here()
